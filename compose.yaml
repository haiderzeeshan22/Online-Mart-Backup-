
name: template01
services:
  
  productservice:
    build:
      context: ./productservice
      dockerfile: Dockerfile.dev
    volumes:
      - ./productservice:/code  # Sync local development directory with the container
    depends_on:
        - productservice_db
        - broker
        
    ports:
      - "8002:8000"  # Expose container port 8000 to host port 8000 


  productservice_db:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: productserviceCont
    environment:
        - POSTGRES_USER=zeeshanprod
        - POSTGRES_PASSWORD=my_password
        - POSTGRES_DB=proddatabase
    ports:
        - '5435:5432'
    volumes:
        - productservice_db:/var/lib/postgresql/data   # volume attachement 



  userservice:
    build:
      context: ./userservice
      dockerfile: Dockerfile.dev
    volumes:
      - ./userservice:/code  # Sync local development directory with the container
    depends_on:
        - user_db
        - broker
    ports:
      - "8003:8000"  # Expose container port 8000 to host port 8000 


  user_db:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: PostgresUserCont
    environment:
        - POSTGRES_USER=zeeshan
        - POSTGRES_PASSWORD=my_password
        - POSTGRES_DB=userdatabase
    ports:
        - '5434:5432'
    volumes:
        - user_db:/var/lib/postgresql/data   # volume attachement 




  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker    # DNS of container 
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker  

      
  schema-registry:
    image: confluentinc/cp-schema-registry:6.1.1
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:19092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081



volumes:
  user_db:
    driver: local
  productservice_db:
    driver: local

    
networks:
  default:
    driver: bridge
